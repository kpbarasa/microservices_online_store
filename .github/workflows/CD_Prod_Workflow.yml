# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on PROD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy_on_prod:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      
      - name: Create customer Env file
        working-directory: ./customer
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.PROD_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.PROD_CUSTOMER_DB_URL }} >> .env
          echo MSG_QUEUE_URL=${{ secrets.PROD_MSG_QUEUE_URL }} >> .env
          echo EXCHANGE_NAME=ONLINE_STORE >> .env
          echo PORT=8001 >> .env
          cat .env
      - name: Create Products Env file
        working-directory: ./products
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.PROD_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.PROD_CUSTOMER_DB_URL }} >> .env
          echo MSG_QUEUE_URL=${{ secrets.PROD_MSG_QUEUE_URL }} >> .env
          echo EXCHANGE_NAME=ONLINE_STORE >> .env
          echo PORT=8002 >> .env
          cat .env
          
      - name: Create shopping Env file
        working-directory: ./shopping
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.PROD_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.PROD_CUSTOMER_DB_URL }} >> .env
          echo MSG_QUEUE_URL=${{ secrets.PROD_MSG_QUEUE_URL }} >> .env
          echo EXCHANGE_NAME=ONLINE_STORE >> .env
          echo PORT=8003 >> .env
          cat .env
          
      - name: Generate deployment package
        run: |
          zip -r deploy.zip . -x '*.git'
      
      - name: Deploy on Elastic beanstalk PROD Env
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          application_name: online_store_microservices_prod
          environment_name: online-store-microservices-env-live
          version_label: "ver-${{ github.sha }}"
          region: us-east-1
          deployment_package: deploy.zip
          use_existing_version_if_available: true
