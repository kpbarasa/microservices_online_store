# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on QA

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_on_qa:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v2

    - name:  Create Customer Env file
      working-directory: ./customer
      run:
         touch .env
         echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
         echo MONGODB_URI=${{ secrets.QA_CUSTOMER_DB_URL }} >> .env
         echo MESSAGE_BROKER_URL=${{ secrets.QA_MSG_QUEUE_URL }}k >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8001 >> .env
         cat .env

    - name:  Create Products  Env file
      working-directory: ./products 
      run:
         touch .env
         echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
         echo MONGODB_URI=${{ secrets.QA_CUSTOMER_DB_URL }} >> .env
         echo MESSAGE_BROKER_URL=${{ secrets.QA_MSG_QUEUE_URL }}k >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8001 >> .env
         cat .env

    - name:  Create Shopping  Env file
      working-directory: ./shopping 
      run:
         touch .env
         echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
         echo MONGODB_URI=${{ secrets.QA_CUSTOMER_DB_URL }} >> .env
         echo MESSAGE_BROKER_URL=${{ secrets.QA_MSG_QUEUE_URL }}k >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8001 >> .env
         cat .env
         
    - name: Generate Deploymwent package
      run:
          zip -r deploy.zip . -x '*.git'
          
    - name: Deploy on Elastic beanstalk QA Env
      uses: einaregilsson/beanstalk-deploy@v20
      with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: youtube-ms
          environment_name: Youtubems-env
          version_label: "ver-${{ github.sha }}"
          region: eu-central-1
          deployment_package: deploy.zip
