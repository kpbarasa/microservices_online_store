# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on QA

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_on_qa:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/setup-node@v3
      
    - name:  Create Customer Env file
      working-directory: ../../products
      run:
         touch .env
         echo APP_SECRET=jg_youtube_tutorial >> .env
         echo MONGODB_URI=mongodb+srv://paulBarasa:iZn9gxbNyXFusFN0@cluster0.4p1ws.mongodb.net/store-repo?retryWrites=true&w=majority >> .env
         echo MESSAGE_BROKER_URL=amqps://tqjprzjk:Znfz-W94a7nKekimaaQNIYoJFQ4ucT-f@shark.rmq.cloudamqp.com/tqjprzjk >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8001 >> .env
         cat .env
      
    - name:  Create Products Env file
      working-directory: ./products
      run:
         touch .env
         echo APP_SECRET=jg_youtube_tutorial >> .env
         echo MONGODB_URI=mongodb+srv://paulBarasa:iZn9gxbNyXFusFN0@cluster0.4p1ws.mongodb.net/store-repo?retryWrites=true&w=majority >> .env
         echo MESSAGE_BROKER_URL=amqps://tqjprzjk:Znfz-W94a7nKekimaaQNIYoJFQ4ucT-f@shark.rmq.cloudamqp.com/tqjprzjk >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8002 >> .env
         cat .env
      
    - name:  Create Shopping Env file
      working-directory: ./products
      run:
         touch .env
         echo APP_SECRET=jg_youtube_tutorial >> .env
         echo MONGODB_URI=mongodb+srv://paulBarasa:iZn9gxbNyXFusFN0@cluster0.4p1ws.mongodb.net/store-repo?retryWrites=true&w=majority >> .env
         echo MESSAGE_BROKER_URL=amqps://tqjprzjk:Znfz-W94a7nKekimaaQNIYoJFQ4ucT-f@shark.rmq.cloudamqp.com/tqjprzjk >> .env
         echo EXCHANGE_NAME=ONLINE_SHOPPING >> .env
         echo PORT=8003 >> .env
         cat .env
         
    - name: Generate Deploymwent package
      run:
          zip -r deploy.zip . -x '*.git'
          
#     - name: Deploy on Elastic beanstalk QA Env
#       uses: einaregilsson/beantalk-deploy@v20
#       with:
#            aws_ accesss_key: ${{secrets.AWS_ACCESS_KEY_ID}}
#            aws-secret_key: ${{AWS_ACCESS_SECRET_KEY}}
#            application_name:  online_store_microservices
#            environment_name: Onlinestoremicroservices-env
#            version_label: "ver-${{ github.sha }}"
#            region: eu-central-1
#            deployment_package: deploy.zip
